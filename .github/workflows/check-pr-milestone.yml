name: Check PR Milestone üè∑
on:
  # Only the issue resource has milestone lifecycle events (milestoned and
  # demilestoned). GitHub treats pull requests as special issues, so changing
  # the milestone of a PR will trigger an issues.milestone or .demilestoned
  # event.
  #
  # See:
  # - https://help.github.com/en/actions/reference/events-that-trigger-workflows#pull-request-event-pull_request
  # - https://help.github.com/en/actions/reference/events-that-trigger-workflows#issues-event-issues
  issues:
    types: [milestoned, demilestoned]
  # We also want our check of the milestone to run when a PR is created
  pull_request:
    types: [opened, reopened]

jobs:
  check:
    runs-on: ubuntu-latest
    if:
      # Because we are intereset only in changes in milestones happening on a PR, let's use filter for events originated from PRs, not issues.
      #
      # Depending on the event that triggered the workflow run, the GitHub
      # context will have different shapes; we need to account for all of
      # them.
      github.event.pull_request != null || github.event.issue.pull_request != null
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node_version: 10.x

      - name: Install Yarn
        run: npm install -g yarn

      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-node_modules

      - name: Yarn Install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        # frozen-lockfile will make the build fail if the lockfile is not there
        run: yarn install --frozen-lockfile

      - name: Validate Milestone
        run: |
          yarn run danger ci \
            --dangerfile Automattic/peril-settings/org/pr/milestone.ts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # This job dumps the event that triggered the build from the GitHub context
  # so that we can inspect it to verify the setup.
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub event
        env:
          GITHUB_EVENT: ${{ toJson(github.event) }}
        run: echo "$GITHUB_EVENT"
